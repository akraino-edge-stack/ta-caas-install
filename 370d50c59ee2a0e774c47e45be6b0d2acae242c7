{
  "comments": [
    {
      "key": {
        "uuid": "d9b7bf0e_080c3759",
        "filename": "infra-charts/templates/prometheus-pvc.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-11-08T12:34:28Z",
      "side": 1,
      "message": "Why is \"nokia\" being added here? What is the net effect of using the nokia specific nodeselector vs the generic one?",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "370d50c59ee2a0e774c47e45be6b0d2acae242c7",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07882a64_c0a539c1",
        "filename": "infra-charts/templates/prometheus-pvc.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 183
      },
      "writtenOn": "2019-11-08T12:58:32Z",
      "side": 1,
      "message": "there is no nodeSelector in the PVC API :)\nannotation field in the K8s API is a simple map of string-string key-value combinations\n\nthey are frequently used to drive provider-specific K8s enhancements, because they allow us to re-use the core K8s APIs without the need to change them upstream. even core K8s sometimes puts stuff into annotation for alpha and beta features\n\nin this specific instance \"nokia.k8s.io/nodeSelector\" is the key which is recognized by the dynamic LVM PV provisioner open source project. you can see similar keys used in DANM, CPU-Pooler, or to bring-up other examples in Intel\u0027s Multus or CMK\ncurrently this has no effect in REC, as LVMs are not yet fully supported for persistent storage. when they will be, this will tell the dynamic PV provisioner on which node Prometheus\u0027s PV should be created",
      "parentUuid": "d9b7bf0e_080c3759",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "370d50c59ee2a0e774c47e45be6b0d2acae242c7",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "594095a3_f3e38644",
        "filename": "infra-charts/templates/prometheus-pvc.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-11-08T13:08:43Z",
      "side": 1,
      "message": "Is this a bugfix then? Do you mean that the original version\n\n  annotations:\n      nodeselector:\n        nodetype\u003dcaas_master\n\nsimply doesn\u0027t work? Or did it work but do something different than this modified version? This would be a great thing to clarify in the commit message.",
      "parentUuid": "07882a64_c0a539c1",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "370d50c59ee2a0e774c47e45be6b0d2acae242c7",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5e54ac5_46f99bf2",
        "filename": "infra-charts/templates/prometheus-pvc.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 183
      },
      "writtenOn": "2019-11-08T13:15:30Z",
      "side": 1,
      "message": "yeah this is actually the follow-up for the previous review, where I have identified the shortcoming in the upstream project during the review of its integration\nas I requested change in upstream as well (using the proper key, change the value to a JSON style so multiple labels can be provided) we decided to post the correction separately\n\nBTW this is still not okay, as it should be \"nodeSelector\"",
      "parentUuid": "594095a3_f3e38644",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "370d50c59ee2a0e774c47e45be6b0d2acae242c7",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": false
    }
  ]
}