{{/*
Copyright 2019 Nokia

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}
{{ if .Values.elasticsearch.required }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch
    component: "{{ .Values.elasticsearch.cluster.name }}"
  name: elasticsearch
  namespace: kube-system
spec:
  serviceName: elasticsearch
  replicas: {{ .Values.elasticsearch.replicas }}
  selector:
    matchLabels:
      app: elasticsearch
      component: "{{ .Values.elasticsearch.cluster.name }}"
  template:
    metadata:
      labels:
        app: elasticsearch
        component: "{{ .Values.elasticsearch.cluster.name }}"
    spec:
      priorityClassName: "system-cluster-critical"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: elasticsearch
                  component: "{{ .Values.elasticsearch.cluster.name }}"
      nodeSelector:
        nodetype: caas_master
      containers:
      - name: elasticsearch
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.elasticsearch.java_heap_request }} -Xmx{{ .Values.elasticsearch.java_heap_max }} -Dmapper.allow_dots_in_name=true -XX:HeapDumpPath=/dev/null"
        {{- range $key, $value :=  .Values.elasticsearch.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        image: {{ .Values.elasticsearch.image_name }}
        command: ["/usr/bin/supervisord","-n","-c","/etc/supervisord.conf"]
        resources:
          limits:
            cpu: "{{ .Values.elasticsearch.cpu_limit }}"
            memory: "{{ .Values.elasticsearch.memory_limit }}"
          requests:
            cpu: "{{ .Values.elasticsearch.cpu_request }}"
            memory: "{{ .Values.elasticsearch.memory_request }}"
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: {{ .Values.elasticsearch.port }}
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: {{ .Values.elasticsearch.port }}
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        volumeMounts:
        - name: time-mount
          mountPath: /etc/localtime
          readOnly: true
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: elasticsearch-config
          subPath: elasticsearch.yml
          readOnly: true
      terminationGracePeriodSeconds: {{ .Values.elasticsearch.terminationGracePeriodSeconds }}
      volumes:
        - name: time-mount
          hostPath:
            path: /etc/localtime
        - name: elasticsearch-config
          configMap:
            name: elasticsearch
            items:
              - key: elasticsearch.yml
                path: elasticsearch.yml
                mode: 0644
        - name: data
          hostPath:
            path: /var/log/elasticsearch
{{ end }}
