---
# Copyright 2019 Nokia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: create nokia directory
  file:
    path: /usr/libexec/nokia/tmp
    state: directory
    mode: 0700
  become: true
  become_user: "root"

- name: create the /etc/openssl directory
  file:
    path: "/etc/openssl"
    state: directory
  become: true
  become_user: "root"
  no_log: True

- name: create /var/lib/docker directory
  file:
    path: "/var/lib/docker"
    state: directory
  become: true
  become_user: "root"

- name: create /srv/node/swift directory
  file:
    path: "/srv/node/swift"
    state: directory
  become_user: "root"

- name: template enc file1
  copy:
    content: "{{ caas.encrypted_ca[0] | replace(' ', '\n')}}"
    dest: /etc/openssl/ca.pem.enc
  become_user: "root"
  no_log: True

- name: template enc file2
  copy:
    content: "{{ caas.encrypted_ca_key[0] | replace(' ', '\n')}}"
    dest: /etc/openssl/ca-key.pem.enc
  become_user: "root"
  no_log: True

- name: template podruntime slice file
  template:
    src: podruntime.slice
    dest: /usr/lib/systemd/system/podruntime.slice
  become_user: "root"

- name: adding acl for cloud_admin_user for /usr/bin/helm
  acl:
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "/usr/bin/helm"
    permissions: "rx"
    recursive: yes
    state: present
  become_user: "root"

- name: adding acl for cloud_admin_user for /usr/bin/kubectl
  acl:
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "/usr/bin/kubectl"
    permissions: "rx"
    recursive: yes
    state: present
  become_user: "root"

- name: adding acl for cloud_admin_user for /usr/libexec/nokia/merge_image.sh
  acl:
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "/usr/libexec/nokia/merge_image.sh"
    permissions: "rx"
    recursive: yes
    state: present
  become_user: "root"

- name: adding acl for cloud_admin_user to read /var/log
  acl:
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "/var/log"
    permissions: "rx"
    recursive: yes
    state: present
  become_user: "root"

- name: adding default for cloud_admin_user, /var/log
  acl:
    default: yes
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "/var/log"
    permissions: "rx"
    recursive: yes
    state: present
  become_user: "root"

- name: adding acl for cloud_admin_user to access caas_chart_path
  acl:
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "{{ caas.caas_chart_path }}"
    permissions: "rwx"
    recursive: yes
    state: present
  become_user: "root"

- name: adding default for cloud_admin_user to access caas_chart_path
  acl:
    default: yes
    entity: "{{ users.admin_user_name }}"
    etype: user
    path: "{{ caas.caas_chart_path }}"
    permissions: "rwx"
    recursive: yes
    state: present
  become_user: "root"

- name: modify the kernel parameters for elasticsearch
  shell: 'sysctl -w vm.max_map_count=262144'
  when: nodetype | search('caas_master')
  become_user: "root"

- name: create /var/log/elasticsearch directory
  file:
    path: /var/log/elasticsearch
    recurse: yes
    owner: "{{ caas.uid.elasticsearch }}"
    group: "{{ caas.uid.elasticsearch }}"
    state: directory
  become_user: "root"
  when: (nodetype is defined) and (nodetype | search('caas_master'))

- name: update bash-completion for kubernetes
  shell: "kubectl completion bash > /etc/bash_completion.d/kubectl-bash"
  become: true
  become_user: "root"

- name: set envinment variables
  lineinfile:
    dest: /etc/environment
    state: present
    line: "{{ item }}"
    regexp: "{{ item }}"
  become: true
  become_user: "root"
  with_items:
    - "SWIFT_URL={{ caas.swift }}"
